<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.mappers.qualityMapper">

	<select id="getQcList" resultType="com.keypoint.dto.QualityDTO">
		select a.qcCode,
			   b.poCode, d.shipSdate, b.woCode, b.productCode, e.productName, b.poCount, 
       	       a.qcTest1, a.qcTest2, a.qcTest3, a.qcPass, a.qcDefect, a.qcDefectRate,
       	       a.qcStatus, a.qcEmpId, f.empName as qcEmpName, a.qcStartDate, a.qcEndDate, a.qcTransfer
		from production b
		left join qualityControl a on b.poCode = a.poCode
		left join workOrder c on b.woCode = c.woCode
		left join receivedOrder d on d.roCode = c.roCode
		left join product e on b.productCode = e.productCode
		left join employees f on a.qcEmpId = f.empId
		where (a.qcStatus != '삭제' OR a.qcStatus IS NULL)
		order by qcCode asc
		limit #{startRow}, #{pageSize}
	</select>
	
	<select id="getQcCount" resultType="java.lang.Integer">
		SELECT COUNT(*) as row_count
		FROM production b
		LEFT JOIN qualityControl a ON b.poCode = a.poCode
		LEFT JOIN workOrder c ON b.woCode = c.woCode
		LEFT JOIN receivedOrder d ON d.roCode = c.roCode
		LEFT JOIN product e ON b.productCode = e.productCode
		LEFT JOIN employees f ON a.qcEmpId = f.empId;
	</select>
	
	
	<select id="getQcDetails" resultType="com.keypoint.dto.QualityDTO">
		select b.woCode, b.poCode, b.productCode, e.productName,
		       b.empId as prodEmpId, (select empName from employees where empId = b.empId) as prodEmpName,
			   d.shipSdate, a.qcTest1, a.qcTest2, a.qcTest3,
			   b.poCount, a.qcPass, a.qcDefect, a.qcDefectRate,
			   a.qcCode, a.qcEmpId, (select empName from employees where empId = a.qcEmpId) as qcEmpName,
			   a.qcStartDate, a.qcEndDate, a.qcStatus, a.qcTransfer
		from production b
		left join qualityControl a on b.poCode = a.poCode
		left join workOrder c on b.woCode = c.woCode
		left join receivedOrder d on d.roCode = c.roCode
		left join product e on b.productCode = e.productCode
		where b.poCode = #{poCode}
	</select>
	
	<insert id="qcStart">
		insert into qualityControl (qcCode, poCode, qcEmpId, qcStartDate, qcStatus,
		                            qcTest1, qcTest2, qcTest3, qcPass, qcDefect)
		values (CONCAT('QC', DATE_FORMAT(NOW(), '%y%m%d%H%i%s')),
		       #{poCode}, #{qcEmpId}, now(), #{qcStatus},
		       #{qcTest1}, #{qcTest2}, #{qcTest3}, #{qcPass}, #{qcDefect})
	</insert>
	
	<update id="updateQc">
		UPDATE qualityControl
		SET qcTest1 = #{qcTest1}, qcTest2 = #{qcTest2}, qcTest3 = #{qcTest3},
		    qcPass = #{qcPass}, qcDefect = #{qcDefect}, qcDefectRate = #{qcDefectRate},
		    qcEmpId = #{qcEmpId}, qcEndDate = #{qcEndDate}, qcStatus = #{qcStatus}
		WHERE poCode = #{poCode}                        
	</update>
	
	<update id="qcTransferStatus">
		UPDATE qualityControl
		SET qcTransfer = '완료'
		WHERE qcCode = #{qcCode} AND qcTransfer = '미완료'
	</update>
	
	<update id="qcTransferStock">
		UPDATE product
		SET productCount = productCount + #{qcPass}
		WHERE productCode = #{productCode}
	</update>
	
	<update id="qcDeleteChecked">
		UPDATE qualityControl
		SET qcStatus = '삭제'
		WHERE poCode IN (
       <foreach item="poCode" collection="poCodes" open="" separator="," close="">
           #{poCode}
       </foreach>
		)
	</update>
	
	<insert id="qcTransferDefect">
		INSERT INTO disposedItems (disCode, disItemCode, disCount, disDate, disEmpId, disMemo)
		VALUES (#{disCode}, #{productCode}, #{qcDefect}, now(), #{qcEmpId}, '품질검사 불량');
	</insert>
	
	<insert id="disInsertP">
		INSERT INTO disposedItems (disCode, disItemCode, disCount, disDate, disEmpId, disMemo)
		VALUES (#{disCode}, #{productCode}, #{disCount}, now(), #{disEmpId}, #{disMemo});
	</insert>
	
	<update id="disMinusP">
		UPDATE product 
		SET productCount = productCount - #{disCount}
		WHERE productCode = #{productCode}
	</update>
	
	<insert id="disInsertM">
		INSERT INTO disposedItems (disCode, disItemCode, disCount, disDate, disEmpId, disMemo)
		VALUES (#{disCode}, #{materialCode}, #{disCount}, now(), #{disEmpId}, #{disMemo});
	</insert>
	
	<update id="disMinusM">
		UPDATE material 
		SET materialCount = materialCount - #{disCount}
		WHERE materialCode = #{materialCode}
	</update>
	
	<select id="getDisposedList" resultType="com.keypoint.dto.QualityDTO">
		select a.disCode, a.disItemCode, b.productName, c.materialName, a.disCount,
		         a.disEmpId, d.empName as disEmpName, a.disDate, a.disMemo
		from disposedItems a
		left join product b on a.disItemCode = b.productCode
		left join material c on a.disItemCode = c.materialCode
		left join employees d on a.disEmpId = d.empId
		<if test="search != null">
			where a.disCode like CONCAT(#{search},'%') 
		</if>
		order by a.disDate desc
		limit #{startRow}, #{pageSize}
	</select>
	<select id="getDisposedCount" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM disposedItems
		<if test="search != null">
			where disCode like CONCAT(#{search},'%')
		</if>
	</select>
	
	<select id="getDisposedSum" resultType="com.keypoint.dto.QualityDTO">
		SELECT productCode, productName,
	   			   IFNULL((SELECT SUM(disCount)
	                           FROM disposedItems
                               WHERE disItemCode = productCode), 0) AS disSum
		FROM product;
	</select>
	
	<select id="getDisposedSumMat" resultType="com.keypoint.dto.QualityDTO">
		SELECT materialCode, materialName,
	   			   IFNULL((SELECT SUM(disCount)
	                           FROM disposedItems
                               WHERE disItemCode = materialCode), 0) AS disSum
		FROM material;
	</select>
	
	<select id="getMaxNum" resultType="java.lang.Integer">
		SELECT MAX(CAST(SUBSTRING(disCode, 5) AS SIGNED)) as max_num
		FROM disposedItems
		WHERE disCode LIKE CONCAT(#{code_id}, '%')
	</select>
</mapper>